#建立mylog，它是打印到控制台的日志产生器

#org.apache.log4j.ConsoleAppender表示是目的地为控制台

log4j.appender.mylog = org.apache.log4j.ConsoleAppender

 

#target指定输出流

log4j.appender.mylog.target = System.out

 

#org.apache.log4j.PatternLayout指定日志输出格式

log4j.appender.mylog.layout= org.apache.log4j.PatternLayout

 

#ConversionPattern给出具体的打印方式

log4j.appender.mylog.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

 

 

#建立my2log 日志器 打印到文件里去

#RollingFileAppender 滚动打印信息到文件，文件打下受到限制

#FileAppender 文件大小不受到限制

log4j.appender.my2log = org.apache.log4j.RollingFileAppender

 

#File 指定打印到那个文件的去

log4j.appender.my2log.File = D://Logger//mylog.log

 

#MaxFileSize 指定文件的大小

log4j.appender.my2log.MaxFileSize = 50KB

 

#MaxBackupIndex 指定文件的最大备份文件数

log4j.appender.my2log.MaxBackupIndex = 1

 

#org.apache.log4j.PatternLayout指定日志输出格式

log4j.appender.my2log.layout= org.apache.log4j.PatternLayout

 

#ConversionPattern给出具体的打印方式

log4j.appender.my2log.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

 

#rootLogger 指定使用的日志器有mylog和my2log

#warn 指定打印信息类型：info:调试信息  warn:警告信息  error:错误信息

#级别从底到高：info-->warn-->error

#定义info 可以打印所有的信息；

#定义warn 可以打印warn 和 error,不能打印info

#定义error 可以打印error ，不能打印info 和 warn

log4j.rootLogger = info,mylog,my2log